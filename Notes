is
input
int(input)
str(input)
float(input)
print("")
max()
min()
if "condition":
elif "condition":
else:
try:
except:
len()
s[3:9] // substr from 3 to 8
in
        if "a" in "bananas"
          or
          fruit="bananas"
          i=0;
        while i<len(fruit)
            if(fruit[i]=="a")
              count++
.lower()
.capatalize()
.upper()
fruit.find("na")  // where is its position (in starting)
fruit.find(" ",index)   // find " " after the given index
'Hello Bob! hey Bob'.replace("Bob","Jane") // will replace all "Bob" in string
.strip()
.lstrip()   // left lstrip
.rstrip()
.startswith('Please')
math.isnan()
open(filename,mode)     //mode=read,write
length of 'X\nY'will be 3
string is immutable but list of numbers in immutable
range(4) returns [0,1,2,3]
list can be concatenated as well as sliced in the same as as we do in starting
list.append()
list.insert()
list.pop()
list.remove()
list.count()
list.extend()
list.index()
list.reverse()
list.sort()
sum(list)
len(list)
max(list)
min(list)
dict()
dict.get(name,0)      // if name key is there then return value otherwise 0
dict.keys() or convert dict to list for same output i.e list(dict)
dict.values()
dict.items() // for two iteration variables


list:
        feild=["cs","dsd","dcfs"]
dict:
        feild={"name":"njdnj","stand":"78","rollNo":"781"}
tuple:
        feild=('fd','dscd','dcs')
tuples are immutable like string
we cant use sort(), append or reverse() in a tuple

regular expressions:
  import re
  re.search("regex",line)    //returns true or false
  re.findall("regex",line)    //returns list f matched valaues in a line
        ^	    Matches the beginning of a line
        $	    Matches the end of the line
        .	    Matches any character
        \s	  Matches whitespace
        \S	  Matches any non-whitespace character
        *	    Repeats a character zero or more times
        *?	  Repeats a character zero or more times (non-greedy)
        +	    Repeats a character one or more times
        +?	  Repeats a character one or more times (non-greedy)
        [aeiou]	  Matches a single character in the listed set
        [^XYZ]	  Matches a single character not in the listed set
        [a-z0-9]	The set of characters can include a range
        (	     Indicates where string extraction is to start
        )	     Indicates where string extraction is to end



each character is stored in 8 bit of memory i.e. a byte.
ord() returns the ASCII value of char
http-80 hyper text transfer protocol
protocol- set of rule to predict the behaviour of next personal
url-uniform resource locator

never name your file socket.py because after that when you will import ocket in your same file at that time it will try to impot the file not the library.

xml-Extensible markup language
JSON: javascript oriented notation - douglar corkford
API: application programming interface




socket
urllib
xml.etree.ElementTree as ES
json
